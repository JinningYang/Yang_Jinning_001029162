/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.Organization.EcoSystem;
import Business.Restaurant.Order;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantMana;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kathe
 */
public class SendRequestTodDeliverymanJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Restaurant restaurant;
    //private UserAccount userAccount;
    private ArrayList<Order>orderList;
    RestaurantMana manager;
    //private EcoSystem system;
    /**
     * Creates new form sendRequestTodDeliveryman
     */
    public SendRequestTodDeliverymanJPanel(JPanel userProcessContainer,RestaurantMana manager) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.manager = manager;
        this.restaurant=manager.getManagedRestaurant();
        this.orderList=manager.getManagedRestaurant().getOrderDirectory().getOrderList();
        populateTable();
        populateRequestTable();
    }
    
    public void populateTable(){
         DefaultTableModel model = (DefaultTableModel)orderJTable.getModel();
         model.setRowCount(0);
         
         for(Order order:orderList){
             
             Object[]row=new Object[4];
             row[0]=order.getOrderId();
             row[1]=order.getOrderMenu().getMenuName();
             if (order.getOrderDeliveryman() != null) {
                row[2]=order.getOrderDeliveryman().getUsername();  
             }
             row[3]=order.getStatus();
             
             model.addRow(row);
         }
    }
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel)requestJTable.getModel();
        //System.out.println("kkik");
            
        model.setRowCount(0);
        for(WorkRequest request:restaurant.getWorkQueue().getWorkRequestList()){
            //System.out.println("kkk");
            System.out.println("ll");
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        requestJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Menu Name", "Deliveryman Name", "Order status"
            }
        ));
        jScrollPane1.setViewportView(orderJTable);

        backJButton.setText("<<back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        requestJButton.setText("Request");
        requestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Message");

        messageJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTextFieldActionPerformed(evt);
            }
        });

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(38, 38, 38)
                                .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(requestJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(backJButton)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(requestJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed

    private void requestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow=orderJTable.getSelectedRow(),col=0;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Order o = restaurant.getOrderDirectory().getOrderList().get(selectedRow);
        for(WorkRequest request:restaurant.getWorkQueue().getWorkRequestList()){
            if(request.getOrder()==o){
                JOptionPane.showMessageDialog(this, "You cannot send information twice for an order!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
            }
        }
        
        if(o.getStatus()==null){
            JOptionPane.showMessageDialog(this, "This order has not been processed!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(o.getStatus().equals("Decline")){
            JOptionPane.showMessageDialog(this, "This order has been cancelled!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(o.getOrderDeliveryman()==null){
            JOptionPane.showMessageDialog(this, "No DeliveryMan has been assigned for this order!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String message=messageJTextField.getText();
        LabTestWorkRequest request=new LabTestWorkRequest();
        request.setMessage(message);
        if (request.getMessage()== null || request.getMessage().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please input the Message", "CREATE", JOptionPane.ERROR_MESSAGE);
            return;
        }
        request.setSender(manager);
        request.setStatus("Send request");
        request.setOrder(o);
        WorkQueue wq = o.getOrderDeliveryman().getWorkQueue();
        wq.getWorkRequestList().add(request);
        restaurant.getWorkQueue().getWorkRequestList().add(request);
        
        JOptionPane.showMessageDialog(null, "Request Send Successfully");
        populateRequestTable();
    }//GEN-LAST:event_requestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdminWorkAreaJPanel dwjp = (AdminWorkAreaJPanel) component;
        //dwjp.populateRequestJTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTable orderJTable;
    private javax.swing.JButton requestJButton;
    private javax.swing.JTable requestJTable;
    // End of variables declaration//GEN-END:variables
}
