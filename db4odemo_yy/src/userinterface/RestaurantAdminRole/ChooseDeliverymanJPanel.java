/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.Organization.EcoSystem;
import Business.Restaurant.Order;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kathe
 */
public class ChooseDeliverymanJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private ArrayList<Order>orderList;
    private EcoSystem system;
    
    /**
     * Creates new form DeliverymanJPanel
     */
    public ChooseDeliverymanJPanel(JPanel userProcessContainer,EcoSystem system,Restaurant restaurant) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        this.orderList=restaurant.getOrderDirectory().getOrderList();
        populateOrderJTable();
        populateDeliverymanJTable();
        populateTotalOrderInformationJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        deliverymanJTable = new javax.swing.JTable();
        chooseJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        totalOrderInformationJTable = new javax.swing.JTable();

        backJButton.setText("<<back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Order ID", "Customer Id"
            }
        ));
        jScrollPane1.setViewportView(orderJTable);

        deliverymanJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "DeliveryMan Id", "DeliveryMan Name"
            }
        ));
        jScrollPane2.setViewportView(deliverymanJTable);

        chooseJButton.setText("Choose DeliveryMan");
        chooseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Order Info");

        totalOrderInformationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "DeliveryMan ID", "Order evaluation"
            }
        ));
        jScrollPane3.setViewportView(totalOrderInformationJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseJButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(backJButton)
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(chooseJButton)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void populateOrderJTable(){
        DefaultTableModel model=(DefaultTableModel)orderJTable.getModel();
        model.setRowCount(0);
        for(Order order:orderList){
            Object[]row=new Object[2];
            row[0]=order.getOrderId();
            row[1]=order.getOrderCustomer().getEmployee().getId();
            
            model.addRow(row);
        }
    }
    
    public void populateDeliverymanJTable(){
        DefaultTableModel model=(DefaultTableModel)deliverymanJTable.getModel();
        model.setRowCount(0);
        
        for(UserAccount userAccount:system.getDeliveryManDirectory().getUserAccountList()){
             if(userAccount.getRole().toString().equals("Delivery")){
                 Object[]row=new Object[2];
                 row[0]=userAccount.getEmployee().getId();
                 row[1]=userAccount.getUsername();
                 model.addRow(row);
             }
        }
    }
    
    public void populateTotalOrderInformationJTable(){
        DefaultTableModel model=(DefaultTableModel)totalOrderInformationJTable.getModel();
        model.setRowCount(0);
        
        for(Order order:orderList){
            if (order.getOrderDeliveryman() == null) {
                continue;
            }
            Object[]row=new Object[3];
            row[0] = order.getOrderId();
            row[1] = order.getOrderDeliveryman().getEmployee().getId();
            row[2] = order.getEvaluation();
            
            model.addRow(row);
        }
    }
    
    private void chooseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow1=orderJTable.getSelectedRow(),col=0;
        int selectedRow2=deliverymanJTable.getSelectedRow();
        
        
        if(selectedRow1<0||selectedRow2<0){
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(orderList.get(selectedRow1).getOrderDeliveryman()!=null){
            //You haven't accepted the order yet
            JOptionPane.showMessageDialog(this, "You've chosen a Deliveryman!", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(orderList.get(selectedRow1).getStatus()==null){
            //You haven't accepted the order yet
            JOptionPane.showMessageDialog(this, "You haven't accepted the order yet", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(orderList.get(selectedRow1).getStatus().equals("Decline")){
            JOptionPane.showMessageDialog(this, "Your order has been cancelled", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        orderList.get(selectedRow1).setOrderDeliveryman(system.getDeliveryManDirectory().getUserAccountList().get(selectedRow2));
        populateTotalOrderInformationJTable();
    }//GEN-LAST:event_chooseJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdminWorkAreaJPanel adminWorkAreaJPanel = (AdminWorkAreaJPanel) component;
        //manageRestaurantManaJPanel.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton chooseJButton;
    private javax.swing.JTable deliverymanJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTable totalOrderInformationJTable;
    // End of variables declaration//GEN-END:variables
}
